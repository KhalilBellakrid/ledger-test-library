// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from thread.djinni

#pragma once

#include <memory>
#include <string>

namespace ledgerapp_gen {

class ExecutionContext;
class Lock;

/**
 *thread_launcher = interface +o +j {
 *    # name is nullable
 *    start_thread(name: optional<string>, run_fn: async_task);
 *}
 */
class ThreadDispatcher {
public:
    virtual ~ThreadDispatcher() {}

    virtual std::shared_ptr<ExecutionContext> getSerialExecutionContext(const std::string & name) = 0;

    virtual std::shared_ptr<ExecutionContext> getThreadPoolExecutionContext(const std::string & name) = 0;

    virtual std::shared_ptr<ExecutionContext> getMainExecutionContext() = 0;

    virtual std::shared_ptr<Lock> newLock() = 0;
};

}  // namespace ledgerapp_gen
